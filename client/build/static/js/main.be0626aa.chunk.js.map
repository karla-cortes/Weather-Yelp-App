{"version":3,"sources":["components/Weather.js","components/CurrentWeather.js","components/WeekWeather.js","components/Places.js","components/Data.js","App.js","reportWebVitals.js","index.js"],"names":["library","add","faSearch","scriptLoader","process","handleSubmit","isScriptLoaded","isScriptLoadSucceed","React","useState","address","setAddress","lat","lng","setCoordinates","handleSelect","value","a","geocodeByAddress","results","getLatLng","latLng","className","onChange","onSelect","searchOptions","types","getInputProps","suggestions","getSuggestionItemProps","loading","icon","placeholder","type","map","suggestion","style","active","color","cursor","backgroundColor","description","require","faWind","faSun","faMoon","faTint","faThermometerThreeQuarters","CurrentWeather","props","state","class","this","currentWeather","date","location","Math","ceil","currentWeatherTemps","size","high","low","currentWind","sunrise","sunset","Component","WeekWeather","weather","item","i","faMapMarkerAlt","faStar","faStarHalfAlt","Places","rating","places","length","Fragment","href","url","target","rel","src","image_url","alt","name","width","ratings","moment","Data","componentDidMount","latitude","longitude","cityname","toString","long","cityName","LatLng","concat","WeatherLatLng","axios","get","then","response","res","data","setState","businesses","getStars","catch","error","console","log","list","push","dt_txt","format","id","main","temp_max","floor","temp_min","currentDate","dt","timezone","wind","speed","getTimes","sys","time","tzoffset","srTime","Date","twoDigits","val","slice","hours","getUTCHours","substring","minutes","getUTCMinutes","bus","ratingsArr","index","starPercentage","starPercentageRounded","round","bind","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be0626aa.chunk.js","sourcesContent":["import React from \"react\";\nimport PlacesAutocomplete, {\n\tgeocodeByAddress,\n\tgetLatLng,\n} from \"react-places-autocomplete\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport scriptLoader from \"react-async-script-loader\";\n\n\nconst { REACT_APP_KEY } = process.env;\n\n\nlibrary.add(faSearch);\nfunction Weather({ handleSubmit, isScriptLoaded, isScriptLoadSucceed }) {\n\tconst [address, setAddress] = React.useState(\"\");\n\tconst [coordinates, setCoordinates] = React.useState({\n\t\tlat: null,\n\t\tlng: null,\n\t});\n\n\t\n\tconst handleChange = (value) => {\n\t\tsetAddress(value);\n\t};\n\n\tconst handleSelect = async (value) => {\n\t\tconst results = await geocodeByAddress(value);\n\t\tconst latLng = await getLatLng(results[0]);\n\t\thandleSubmit(latLng.lat, latLng.lng, value);\n\t\tsetAddress(value);\n\t\tsetCoordinates(latLng);\n\t};\n\n\tif (isScriptLoaded && isScriptLoadSucceed) {\n\t\treturn (\n\t\t\t<div className=\"top-section\">\n\t\t\t\t<PlacesAutocomplete\n\t\t\t\t\tvalue={address}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonSelect={handleSelect}\n\t\t\t\t\tsearchOptions={{ types: [\"geocode\"] }}\n\t\t\t\t>\n\t\t\t\t\t{({\n\t\t\t\t\t\tgetInputProps,\n\t\t\t\t\t\tsuggestions,\n\t\t\t\t\t\tgetSuggestionItemProps,\n\t\t\t\t\t\tloading,\n\t\t\t\t\t}) => (\n\t\t\t\t\t\t<div className=\"search-bar\">\n\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} className=\"search-button\" />\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t{...getInputProps({\n\t\t\t\t\t\t\t\t\t\tplaceholder: \"Search City or Zip Code\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</form>\n\n\t\t\t\t\t\t\t<div className=\"drop-down\">\n\t\t\t\t\t\t\t\t{loading && <div>Loading...</div>}\n\t\t\t\t\t\t\t\t{suggestions.map((suggestion) => {\n\t\t\t\t\t\t\t\t\tconst style = suggestion.active\n\t\t\t\t\t\t\t\t\t\t? { color: \"#88d2f0\", cursor: \"pointer\" }\n\t\t\t\t\t\t\t\t\t\t: { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div {...getSuggestionItemProps(suggestion, { style })}>\n\t\t\t\t\t\t\t\t\t\t\t{suggestion.description}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</PlacesAutocomplete>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div></div>;\n\t}\n}\n\nexport default scriptLoader([\n\t`https://maps.googleapis.com/maps/api/js?key=${REACT_APP_KEY}&libraries=places`,\n])(Weather);\n","import React, { Component } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faWind } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSun } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTint } from \"@fortawesome/free-solid-svg-icons\";\nimport { faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { faThermometerThreeQuarters } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nvar FontAwesome = require(\"react-fontawesome\");\n\nlibrary.add(faWind, faSun, faMoon, faTint, faThermometerThreeQuarters);\n\nclass CurrentWeather extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"top-section current\">\n\t\t\t\t<div className=\"current-weather\">\n\t\t\t\t\t<div className=\"today-current-weather\">\n\t\t\t\t\t\t<i class={`owf owf-${this.props.currentWeather[\"id\"]} owf-5x`}></i>\n\t\t\t\t\t\t<h3>Today</h3>\n\t\t\t\t\t\t<p>{this.props.date}</p>\n\t\t\t\t\t\t<h3>{this.props.location}</h3>\n\n\t\t\t\t\t\t<div className=\"temperature-section\">\n\t\t\t\t\t\t\t<span className=\"temperature\">\n\t\t\t\t\t\t\t\t{Math.ceil(this.props.currentWeatherTemps[\"temp\"])}&#176;\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"feels-like\">\n\t\t\t\t\t\t\t\tFeels Like{\" \"}\n\t\t\t\t\t\t\t\t{Math.ceil(this.props.currentWeatherTemps[\"feels_like\"])}&#176;\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<p>{this.props.currentWeather[\"description\"]}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"weather-bar\">\n\t\t\t\t\t\t<div className=\"weather-bar-element\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faThermometerThreeQuarters} size=\"2x\" />\n\t\t\t\t\t\t\t<p>High/Low</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{this.props.high}&#176;/{this.props.low}&#176;\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"weather-bar-element\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWind} size=\"2x\" />\n\t\t\t\t\t\t\t<p>Wind</p>\n\t\t\t\t\t\t\t<p>{this.props.currentWind} mph</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"weather-bar-element\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTint} size=\"2x\" />\n\t\t\t\t\t\t\t<p>Humidity</p>\n\t\t\t\t\t\t\t<p>{this.props.currentWeatherTemps[\"humidity\"]}%</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"weather-bar-element\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSun} size=\"2x\" />\n\t\t\t\t\t\t\t<p>Sunrise</p>\n\t\t\t\t\t\t\t<p>{this.props.sunrise}</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"weather-bar-element\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faMoon} size=\"2x\" />\n\t\t\t\t\t\t\t<p>Sunset</p>\n\t\t\t\t\t\t\t<p>{this.props.sunset}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"gradient current\"></div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CurrentWeather;\n","import React, { Component } from \"react\";\n\nclass WeekWeather extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"top-section\">\n\t\t\t\t<div className=\"week-weather\">\n\t\t\t\t\t<div className=\"weeks-weather-header\">\n\t\t\t\t\t\t<h2>This Week</h2>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"weeks-weather\">\n\t\t\t\t\t\t{this.props.weather.map((item, i) => (\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>{item[0]} </li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<i class={`owf owf-${item[1]} owf-3x`}></i>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>{item[2]}</li>\n\t\t\t\t\t\t\t\t<li>{item[3]}</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{item[4]}&#176;/{item[5]}&#176;\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WeekWeather;\n","import React, { Component } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStarHalfAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(faMapMarkerAlt, faStar, faStarHalfAlt);\n\nclass Places extends Component {\n\tstate = {\n\t\trating: \"\",\n\t};\n\n\trender() {\n\t\tif (this.props.places.length > 0) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"places-header\">\n\t\t\t\t\t\t<h2>Places to Visit</h2>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"places-container\">\n\t\t\t\t\t\t{this.props.places.map((item, i) => (\n\t\t\t\t\t\t\t<div className=\"places\">\n\t\t\t\t\t\t\t\t<a href={item.url} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t\t<img src={item.image_url} alt={item.name} />\n\t\t\t\t\t\t\t\t\t<div className=\"place-info\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"bottom-left no-marker\">\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"title\"> {item.name}</p>\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"stars\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"stars-outer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"stars-inner\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: this.props.ratings[i] }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"number-rating\">{item.rating}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Sorry no places were found in this location</p>\n\t\t\t\t\t<p>{this.state.rating}</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Places;\n","import React, { Component } from \"react\";\nimport Weather from \"./Weather\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport WeekWeather from \"./WeekWeather\";\nimport Places from \"./Places\";\nimport axios from \"axios\";\n\nconst moment = require(\"moment-timezone\");\n\nclass Data extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrentWeather: [],\n\t\t\tdate: \"\",\n\t\t\tplaces: [],\n\t\t\tcurrentWeatherTemps: [],\n\t\t\tcurrentWind: \"\",\n\t\t\tlocation: \"\",\n\t\t\thigh: \"\",\n\t\t\tlow: \"\",\n\t\t\tweather: [],\n\t\t\tsunrise: \"\",\n\t\t\tsunset: \"\",\n\t\t\tratings: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.handleSubmit(34.0522, -118.2437, \"Los Angeles, CA, USA\");\n\t};\n\n\thandleSubmit = (latitude, longitude, cityname) => {\n\t\tlet lat = latitude.toString();\n\t\tlet long = longitude.toString();\n\t\tlet cityName = cityname;\n\t\tlet LatLng = lat.concat(\",\", long);\n\t\tlet WeatherLatLng = `lat=${lat}&lon=${long}`;\n\n\t\taxios\n\t\t\t.get(`/places/${LatLng}`)\n\t\t\t.then((response) => {\n\t\t\t\tlet res = response.data;\n\t\t\t\tthis.setState({ places: res.businesses });\n\t\t\t\tthis.getStars(res.businesses);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\n\t\taxios\n\t\t\t.get(`/weather/${WeatherLatLng}`)\n\t\t\t.then((response) => {\n\t\t\t\tlet res = response.data;\n\t\t\t\tlet list = [];\n\t\t\t\tfor (let i = 0; i < res.list.length; i += 8) {\n\t\t\t\t\tlist.push([\n\t\t\t\t\t\tmoment(res.list[i].dt_txt).format(\"ddd\"),\n\t\t\t\t\t\tres.list[i].weather[0].id,\n\t\t\t\t\t\tres.list[i].weather[0].main,\n\t\t\t\t\t\tres.list[i].weather[0].description,\n\t\t\t\t\t\tMath.ceil(res.list[i].main.temp_max),\n\t\t\t\t\t\tMath.floor(res.list[i].main.temp_min),\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\tthis.setState({ location: cityName, weather: list });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\n\t\taxios\n\t\t\t.get(`/currentweather/${WeatherLatLng}`)\n\t\t\t.then((response) => {\n\t\t\t\tlet res = response.data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tdate: this.currentDate(res.dt, res.timezone),\n\t\t\t\t\tcurrentWeather: res.weather[0],\n\t\t\t\t\tcurrentWeatherTemps: res.main,\n\t\t\t\t\thigh: Math.ceil(res.main.temp_max),\n\t\t\t\t\tlow: Math.floor(res.main.temp_min),\n\t\t\t\t\tcurrentWind: Math.ceil(res.wind.speed),\n\t\t\t\t\tsunrise: `${this.getTimes(res.sys.sunrise, res.timezone)} AM`,\n\t\t\t\t\tsunset: `${this.getTimes(res.sys.sunset, res.timezone)} PM`,\n\t\t\t\t});\n\t\t\t\tconsole.log(res.main.temp_max);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\tcurrentDate = (time, tzoffset) => {\n\t\tlet srTime = new Date((time + tzoffset) * 1000);\n\t\tsrTime = moment(srTime).format(\"LL\");\n\t\treturn srTime;\n\t};\n\n\tgetTimes = (time, tzoffset) => {\n\t\tconst srTime = new Date((time + tzoffset) * 1000);\n\t\tconst twoDigits = (val) => {\n\t\t\treturn (\"0\" + val).slice(-2);\n\t\t};\n\t\tlet hours = twoDigits(srTime.getUTCHours());\n\t\thours > 12 ? (hours = hours - 12) : (hours = hours.substring(1));\n\t\tconst minutes = twoDigits(srTime.getUTCMinutes());\n\t\tconst finalTime = `${hours}:${minutes}`;\n\t\treturn finalTime;\n\t};\n\n\tgetStars = (bus) => {\n\t\tlet places = bus;\n\t\tlet ratingsArr = [];\n\t\tfor (let index in places) {\n\t\t\tconst starsTotal = 5;\n\t\t\tconst starPercentage = (places[index].rating / starsTotal) * 100;\n\t\t\tlet starPercentageRounded = `${Math.round(starPercentage / 10) * 10}%`;\n\t\t\tratingsArr.push(starPercentageRounded);\n\t\t}\n\t\tthis.setState({ ratings: ratingsArr });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"sample-section\">\n\t\t\t\t\t<div className=\"search-bar-mobile\">\n\t\t\t\t\t\t<Weather handleSubmit={this.handleSubmit.bind(this)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<CurrentWeather\n\t\t\t\t\t\thigh={this.state.high}\n\t\t\t\t\t\tlow={this.state.low}\n\t\t\t\t\t\tdate={this.state.date}\n\t\t\t\t\t\tlocation={this.state.location}\n\t\t\t\t\t\tcurrentWeather={this.state.currentWeather}\n\t\t\t\t\t\tcurrentWeatherTemps={this.state.currentWeatherTemps}\n\t\t\t\t\t\tcurrentWind={this.state.currentWind}\n\t\t\t\t\t\tsunset={this.state.sunset}\n\t\t\t\t\t\tsunrise={this.state.sunrise}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"weeks-weather-places\">\n\t\t\t\t\t\t<div className=\"search-bar-desktop\">\n\t\t\t\t\t\t\t<Weather handleSubmit={this.handleSubmit.bind(this)} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<WeekWeather weather={this.state.weather} />\n\t\t\t\t\t\t<Places places={this.state.places} ratings={this.state.ratings} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Data;\n","import './styles/styles.scss';\nimport './App.css';\nimport Data from './components/Data';\n\nfunction App() {\n  return (\n    <div>\n      <Data />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}