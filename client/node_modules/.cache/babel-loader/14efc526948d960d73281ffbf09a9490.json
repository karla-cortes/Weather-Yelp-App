{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/karlacortes/Desktop/Projects/Weather App/frontend/src/components/Data.js\";\nimport React, { Component } from 'react';\nimport Weather from './Weather';\nimport CurrentWeather from './CurrentWeather';\nimport WeekWeather from './WeekWeather';\nimport Places from './Places';\nimport axios from \"axios\";\n\nconst moment = require('moment-timezone');\n\nclass Data extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.handleSubmit(25.7616798, -80.1917902, 'Miami, FL, USA');\n    };\n\n    this.handleSubmit = (latitude, longitude, cityname) => {\n      let lat = latitude.toString();\n      let long = longitude.toString();\n      let cityName = cityname;\n      let LatLng = lat.concat(',', long);\n      let WeatherLatLng = `lat=${lat}&lon=${long}`;\n      axios.get(`/places/${LatLng}`).then(response => {\n        let res = response.data;\n        this.setState({\n          places: res.businesses\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      axios.get(`/weather/${WeatherLatLng}`).then(response => {\n        moment.updateLocale('en', {\n          weekdaysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n        });\n        let res = response.data;\n        let list = [];\n\n        for (let i = 0; i < res.list.length; i += 8) {\n          list.push([moment(res.list[i].dt_txt).format('ddd'), res.list[i].weather[0].icon, res.list[i].weather[0].main, Math.ceil(res.list[i].main.temp_max), Math.floor(res.list[i].main.temp_min)]);\n        }\n\n        this.setState({\n          location: cityName,\n          weather: list\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      axios.get(`/currentweather/${WeatherLatLng}`).then(response => {\n        let res = response.data;\n        this.setState({\n          date: this.currentDate(res.dt, res.timezone),\n          currentWeather: res.weather[0],\n          currentWeatherTemps: res.main,\n          high: Math.ceil(res.main.temp_max),\n          low: Math.floor(res.main.temp_min),\n          currentWind: Math.ceil(res.wind.speed),\n          sunrise: `${this.getTimes(res.sys.sunrise, res.timezone)} AM`,\n          sunset: `${this.getTimes(res.sys.sunset, res.timezone)} PM`\n        });\n        console.log(res.main.temp_max);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.currentDate = (time, tzoffset) => {\n      let srTime = new Date((time + tzoffset) * 1000);\n      srTime = moment(srTime).format('LL');\n      console.log(srTime);\n      return srTime;\n    };\n\n    this.getTimes = (time, tzoffset) => {\n      const srTime = new Date((time + tzoffset) * 1000);\n\n      const twoDigits = val => {\n        return ('0' + val).slice(-2);\n      };\n\n      let hours = twoDigits(srTime.getUTCHours());\n      hours > 12 ? hours = hours - 12 : hours = hours.substring(1);\n      ;\n      const minutes = twoDigits(srTime.getUTCMinutes());\n      const finalTime = `${hours}:${minutes}`;\n      return finalTime;\n    };\n\n    this.state = {\n      currentWeather: [],\n      date: '',\n      places: [],\n      currentWeatherTemps: [],\n      currentWind: '',\n      location: '',\n      high: '',\n      low: '',\n      weather: [],\n      sunrise: '',\n      sunset: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Weather, {\n        handleSubmit: this.handleSubmit.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        high: this.state.high,\n        low: this.state.low,\n        date: this.state.date,\n        location: this.state.location,\n        currentWeather: this.state.currentWeather,\n        currentWeatherTemps: this.state.currentWeatherTemps,\n        currentWind: this.state.currentWind,\n        sunset: this.state.sunset,\n        sunrise: this.state.sunrise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WeekWeather, {\n        weather: this.state.weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Places, {\n        places: this.state.places\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Data;","map":{"version":3,"sources":["/Users/karlacortes/Desktop/Projects/Weather App/frontend/src/components/Data.js"],"names":["React","Component","Weather","CurrentWeather","WeekWeather","Places","axios","moment","require","Data","constructor","props","componentDidMount","handleSubmit","latitude","longitude","cityname","lat","toString","long","cityName","LatLng","concat","WeatherLatLng","get","then","response","res","data","setState","places","businesses","catch","error","console","log","updateLocale","weekdaysShort","list","i","length","push","dt_txt","format","weather","icon","main","Math","ceil","temp_max","floor","temp_min","location","date","currentDate","dt","timezone","currentWeather","currentWeatherTemps","high","low","currentWind","wind","speed","sunrise","getTimes","sys","sunset","time","tzoffset","srTime","Date","twoDigits","val","slice","hours","getUTCHours","substring","minutes","getUTCMinutes","finalTime","state","render","bind"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAAtB;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AACzBS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBvBC,iBAhBuB,GAgBH,MAAM;AACtB,WAAKC,YAAL,CAAkB,UAAlB,EAA6B,CAAC,UAA9B,EAAyC,gBAAzC;AACH,KAlBsB;;AAAA,SAsBvBA,YAtBuB,GAsBR,CAACC,QAAD,EAAUC,SAAV,EAAqBC,QAArB,KAAkC;AAC7C,UAAIC,GAAG,GAAGH,QAAQ,CAACI,QAAT,EAAV;AACA,UAAIC,IAAI,GAAGJ,SAAS,CAACG,QAAV,EAAX;AACA,UAAIE,QAAQ,GAAGJ,QAAf;AACA,UAAIK,MAAM,GAAGJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAeH,IAAf,CAAb;AACA,UAAII,aAAa,GAAI,OAAMN,GAAI,QAAOE,IAAK,EAA3C;AAEAb,MAAAA,KAAK,CAACkB,GAAN,CAAW,WAAUH,MAAO,EAA5B,EAA+BI,IAA/B,CAAoCC,QAAQ,IAAI;AAC5C,YAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB;AACA,aAAKC,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAEH,GAAG,CAACI;AAAb,SAAd;AACH,OAHD,EAGGC,KAHH,CAGUC,KAAD,IAAW;AAAEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,OAHzC;AAKA3B,MAAAA,KAAK,CAACkB,GAAN,CAAW,YAAWD,aAAc,EAApC,EAAuCE,IAAvC,CAA4CC,QAAQ,IAAI;AACpDnB,QAAAA,MAAM,CAAC6B,YAAP,CAAoB,IAApB,EAA0B;AACtBC,UAAAA,aAAa,EAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C;AADM,SAA1B;AAIA,YAAIV,GAAG,GAAGD,QAAQ,CAACE,IAAnB;AACA,YAAIU,IAAI,GAAG,EAAX;;AACA,aAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGZ,GAAG,CAACW,IAAJ,CAASE,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACvCD,UAAAA,IAAI,CAACG,IAAL,CAAU,CAAClC,MAAM,CAACoB,GAAG,CAACW,IAAJ,CAASC,CAAT,EAAYG,MAAb,CAAN,CAA2BC,MAA3B,CAAkC,KAAlC,CAAD,EAA0ChB,GAAG,CAACW,IAAJ,CAASC,CAAT,EAAYK,OAAZ,CAAoB,CAApB,EAAuBC,IAAjE,EAAsElB,GAAG,CAACW,IAAJ,CAASC,CAAT,EAAYK,OAAZ,CAAoB,CAApB,EAAuBE,IAA7F,EAAkGC,IAAI,CAACC,IAAL,CAAUrB,GAAG,CAACW,IAAJ,CAASC,CAAT,EAAYO,IAAZ,CAAiBG,QAA3B,CAAlG,EAAuIF,IAAI,CAACG,KAAL,CAAWvB,GAAG,CAACW,IAAJ,CAASC,CAAT,EAAYO,IAAZ,CAAiBK,QAA5B,CAAvI,CAAV;AACH;;AACD,aAAKtB,QAAL,CAAc;AAAEuB,UAAAA,QAAQ,EAAEhC,QAAZ;AAAsBwB,UAAAA,OAAO,EAAEN;AAA/B,SAAd;AACH,OAXD,EAWGN,KAXH,CAWUC,KAAD,IAAW;AAAEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,OAXzC;AAaA3B,MAAAA,KAAK,CAACkB,GAAN,CAAW,mBAAkBD,aAAc,EAA3C,EAA8CE,IAA9C,CAAmDC,QAAQ,IAAI;AAC3D,YAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB;AACA,aAAKC,QAAL,CAAc;AAAEwB,UAAAA,IAAI,EAAE,KAAKC,WAAL,CAAiB3B,GAAG,CAAC4B,EAArB,EAAyB5B,GAAG,CAAC6B,QAA7B,CAAR;AAAgDC,UAAAA,cAAc,EAAE9B,GAAG,CAACiB,OAAJ,CAAY,CAAZ,CAAhE;AAAgFc,UAAAA,mBAAmB,EAAE/B,GAAG,CAACmB,IAAzG;AAA+Ga,UAAAA,IAAI,EAAEZ,IAAI,CAACC,IAAL,CAAUrB,GAAG,CAACmB,IAAJ,CAASG,QAAnB,CAArH;AAAmJW,UAAAA,GAAG,EAAEb,IAAI,CAACG,KAAL,CAAWvB,GAAG,CAACmB,IAAJ,CAASK,QAApB,CAAxJ;AAAuLU,UAAAA,WAAW,EAAEd,IAAI,CAACC,IAAL,CAAUrB,GAAG,CAACmC,IAAJ,CAASC,KAAnB,CAApM;AAA+NC,UAAAA,OAAO,EAAG,GAAE,KAAKC,QAAL,CAActC,GAAG,CAACuC,GAAJ,CAAQF,OAAtB,EAA+BrC,GAAG,CAAC6B,QAAnC,CAA6C,KAAxR;AAA8RW,UAAAA,MAAM,EAAG,GAAE,KAAKF,QAAL,CAActC,GAAG,CAACuC,GAAJ,CAAQC,MAAtB,EAA8BxC,GAAG,CAAC6B,QAAlC,CAA4C;AAArV,SAAd;AACAtB,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACmB,IAAJ,CAASG,QAArB;AACH,OAJD,EAIGjB,KAJH,CAIUC,KAAD,IAAW;AAAEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,OAJzC;AAKH,KApDsB;;AAAA,SAsDvBqB,WAtDuB,GAsDT,CAACc,IAAD,EAAMC,QAAN,KAAmB;AAC7B,UAAIC,MAAM,GAAG,IAAIC,IAAJ,CAAS,CAACH,IAAI,GAACC,QAAN,IAAgB,IAAzB,CAAb;AACAC,MAAAA,MAAM,GAAG/D,MAAM,CAAC+D,MAAD,CAAN,CAAe3B,MAAf,CAAsB,IAAtB,CAAT;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYmC,MAAZ;AACA,aAAOA,MAAP;AACH,KA3DsB;;AAAA,SA6DvBL,QA7DuB,GA6DZ,CAACG,IAAD,EAAMC,QAAN,KAAmB;AAC1B,YAAMC,MAAM,GAAG,IAAIC,IAAJ,CAAS,CAACH,IAAI,GAACC,QAAN,IAAgB,IAAzB,CAAf;;AACA,YAAMG,SAAS,GAAIC,GAAD,IAAS;AACvB,eAAO,CAAC,MAAMA,GAAP,EAAYC,KAAZ,CAAkB,CAAC,CAAnB,CAAP;AACD,OAFH;;AAGA,UAAIC,KAAK,GAAGH,SAAS,CAACF,MAAM,CAACM,WAAP,EAAD,CAArB;AACAD,MAAAA,KAAK,GAAG,EAAR,GAAaA,KAAK,GAAGA,KAAK,GAAG,EAA7B,GAAkCA,KAAK,GAAGA,KAAK,CAACE,SAAN,CAAgB,CAAhB,CAA1C;AAA6D;AAC7D,YAAMC,OAAO,GAAGN,SAAS,CAACF,MAAM,CAACS,aAAP,EAAD,CAAzB;AACA,YAAMC,SAAS,GAAG,GAAEL,KAAM,IAAGG,OAAQ,EAArC;AACA,aAAOE,SAAP;AACH,KAvEsB;;AAEf,SAAKC,KAAL,GAAa;AACTxB,MAAAA,cAAc,EAAE,EADP;AAETJ,MAAAA,IAAI,EAAE,EAFG;AAGTvB,MAAAA,MAAM,EAAE,EAHC;AAIT4B,MAAAA,mBAAmB,EAAE,EAJZ;AAKTG,MAAAA,WAAW,EAAE,EALJ;AAMTT,MAAAA,QAAQ,EAAE,EAND;AAOTO,MAAAA,IAAI,EAAE,EAPG;AAQTC,MAAAA,GAAG,EAAE,EARI;AASThB,MAAAA,OAAO,EAAE,EATA;AAUToB,MAAAA,OAAO,EAAE,EAVA;AAWTG,MAAAA,MAAM,EAAE;AAXC,KAAb;AAaH;;AA0DDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,YAAY,EAAE,KAAKrE,YAAL,CAAkBsE,IAAlB,CAAuB,IAAvB;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWtB,IAAjC;AAAuC,QAAA,GAAG,EAAE,KAAKsB,KAAL,CAAWrB,GAAvD;AAA4D,QAAA,IAAI,EAAE,KAAKqB,KAAL,CAAW5B,IAA7E;AAAmF,QAAA,QAAQ,EAAE,KAAK4B,KAAL,CAAW7B,QAAxG;AAAkH,QAAA,cAAc,EAAE,KAAK6B,KAAL,CAAWxB,cAA7I;AAA6J,QAAA,mBAAmB,EAAE,KAAKwB,KAAL,CAAWvB,mBAA7L;AAAkN,QAAA,WAAW,EAAE,KAAKuB,KAAL,CAAWpB,WAA1O;AAAuP,QAAA,MAAM,EAAE,KAAKoB,KAAL,CAAWd,MAA1Q;AAAkR,QAAA,OAAO,EAAE,KAAKc,KAAL,CAAWjB;AAAtS;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWrC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKqC,KAAL,CAAWnD;AAA3B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAnFwB;;AAsF7B,eAAerB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Weather from './Weather';\nimport CurrentWeather from './CurrentWeather';\nimport WeekWeather from './WeekWeather';\nimport Places from './Places';\nimport axios from \"axios\";\n\nconst moment = require('moment-timezone');\n\nclass Data extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentWeather: [],\n            date: '',\n            places: [],\n            currentWeatherTemps: [],\n            currentWind: '',\n            location: '',\n            high: '',\n            low: '',\n            weather: [],\n            sunrise: '',\n            sunset: ''\n        }\n    }\ncomponentDidMount = () => {\n    this.handleSubmit(25.7616798,-80.1917902,'Miami, FL, USA');\n}\n\n\n\nhandleSubmit = (latitude,longitude, cityname) => {\n    let lat = latitude.toString();\n    let long = longitude.toString();\n    let cityName = cityname;\n    let LatLng = lat.concat(',',long);\n    let WeatherLatLng = `lat=${lat}&lon=${long}`;\n\n    axios.get(`/places/${LatLng}`).then(response => {\n        let res = response.data;\n        this.setState({places: res.businesses})\n    }).catch((error) => { console.log(error)});\n   \n    axios.get(`/weather/${WeatherLatLng}`).then(response => {\n        moment.updateLocale('en', {\n            weekdaysShort : [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n        });\n\n        let res = response.data;\n        let list = [];\n        for(let i= 0; i < res.list.length; i += 8) {\n            list.push([moment(res.list[i].dt_txt).format('ddd'),res.list[i].weather[0].icon,res.list[i].weather[0].main,Math.ceil(res.list[i].main.temp_max),Math.floor(res.list[i].main.temp_min)]); \n        }\n        this.setState({ location: cityName, weather: list})\n    }).catch((error) => { console.log(error)});\n\n    axios.get(`/currentweather/${WeatherLatLng}`).then(response => {\n        let res = response.data;\n        this.setState({ date: this.currentDate(res.dt, res.timezone), currentWeather: res.weather[0], currentWeatherTemps: res.main, high: Math.ceil(res.main.temp_max), low: Math.floor(res.main.temp_min), currentWind: Math.ceil(res.wind.speed), sunrise: `${this.getTimes(res.sys.sunrise, res.timezone)} AM`, sunset: `${this.getTimes(res.sys.sunset, res.timezone)} PM`}) \n        console.log(res.main.temp_max);\n    }).catch((error) => { console.log(error)});\n}\n\ncurrentDate = (time,tzoffset) => {\n    let srTime = new Date((time+tzoffset)*1000);\n    srTime = moment(srTime).format('LL');\n    console.log(srTime);\n    return srTime;\n}\n\ngetTimes = (time,tzoffset) => {\n    const srTime = new Date((time+tzoffset)*1000);\n    const twoDigits = (val) => {\n        return ('0' + val).slice(-2);\n      };\n    let hours = twoDigits(srTime.getUTCHours());\n    hours > 12 ? hours = hours - 12 : hours = hours.substring(1);;\n    const minutes = twoDigits(srTime.getUTCMinutes());\n    const finalTime =`${hours}:${minutes}`\n    return finalTime;\n}\n    \n    render() { \n        return ( \n            <div>\n                <Weather handleSubmit={this.handleSubmit.bind(this)}/>\n                <CurrentWeather high={this.state.high} low={this.state.low} date={this.state.date} location={this.state.location} currentWeather={this.state.currentWeather} currentWeatherTemps={this.state.currentWeatherTemps} currentWind={this.state.currentWind} sunset={this.state.sunset} sunrise={this.state.sunrise} />\n                <WeekWeather weather={this.state.weather} />\n                <Places places={this.state.places} />\n            </div>\n         );\n    }\n}\n \nexport default Data;"]},"metadata":{},"sourceType":"module"}