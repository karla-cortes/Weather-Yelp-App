{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/karlacortes/Desktop/Projects/Weather App/frontend/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport scriptLoader from \"react-async-script-loader\";\n\nfunction Weather({\n  isScriptLoaded,\n  isScriptLoadSucceed\n}) {\n  _s();\n\n  const [address, setAddress] = React.useState(\"\");\n\n  const handleChange = value => {\n    setAddress(value);\n  };\n\n  const handleSelect = value => {\n    setAddress(value);\n  };\n\n  if (isScriptLoaded && isScriptLoadSucceed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: address,\n        onChange: handleChange,\n        onSelect: handleSelect,\n        children: ({\n          getInputProps,\n          suggestions,\n          getSuggestionItemProps,\n          loading\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n              placeholder: \"Enter Address...\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 31\n            }, this), suggestions.map(suggestion => {\n              const style = suggestion.active ? {\n                backgroundColor: \"#a83232\",\n                cursor: \"pointer\"\n              } : {\n                backgroundColor: \"#ffffff\",\n                cursor: \"pointer\"\n              };\n              return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                  style\n                }),\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this);\n  }\n} // class Weather extends Component {\n//     state = {  }\n//     render() { \n//         return ( \n//             <div>\n//                 <form onSubmit={this.props.handleSubmit}>\n//                     <input type=\"search\" name=\"location\" placeholder=\"Search Location\"/>\n//                     <button className=\"find-location\">Find Weather</button>\n//                     </form>\n//             </div>\n//          );\n//     }\n// }\n\n\n_s(Weather, \"Nj6wSJwO05S0A7/J3wD3ytLWGxI=\");\n\n_c = Weather;\nexport default scriptLoader([`https://maps.googleapis.com/maps/api/js?key=AIzaSyAdjCck2Sns4vUNqVAqimDhZITv34DKVVQ&libraries=places`])(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/karlacortes/Desktop/Projects/Weather App/frontend/src/components/Weather.js"],"names":["React","Component","PlacesAutocomplete","scriptLoader","Weather","isScriptLoaded","isScriptLoadSucceed","address","setAddress","useState","handleChange","value","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","active","backgroundColor","cursor","description","App"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAjB,EAA0D;AAAA;;AACtD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA9B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,UAAU,CAACG,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAID,KAAD,IAAW;AAC9BH,IAAAA,UAAU,CAACG,KAAD,CAAV;AACD,GAFD;;AAIA,MAAIN,cAAc,IAAIC,mBAAtB,EAA2C;AACzC,wBACE;AAAA,6BACE,QAAC,kBAAD;AACE,QAAA,KAAK,EAAEC,OADT;AAEE,QAAA,QAAQ,EAAEG,YAFZ;AAGE,QAAA,QAAQ,EAAEE,YAHZ;AAAA,kBAKG,CAAC;AACAC,UAAAA,aADA;AAEAC,UAAAA,WAFA;AAGAC,UAAAA,sBAHA;AAIAC,UAAAA;AAJA,SAAD,kBAMC;AAAA,kCACE,sBACMH,aAAa,CAAC;AAChBI,cAAAA,WAAW,EAAE;AADG,aAAD;AADnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,uBACGD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADd,EAEGF,WAAW,CAACI,GAAZ,CAAiBC,UAAD,IAAgB;AAC/B,oBAAMC,KAAK,GAAGD,UAAU,CAACE,MAAX,GACV;AAAEC,gBAAAA,eAAe,EAAE,SAAnB;AAA8BC,gBAAAA,MAAM,EAAE;AAAtC,eADU,GAEV;AAAED,gBAAAA,eAAe,EAAE,SAAnB;AAA8BC,gBAAAA,MAAM,EAAE;AAAtC,eAFJ;AAIA,kCACE,oBAASR,sBAAsB,CAACI,UAAD,EAAa;AAAEC,kBAAAA;AAAF,iBAAb,CAA/B;AAAA,0BACGD,UAAU,CAACK;AADd;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD,aAVA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAsCD,GAvCD,MAuCO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,C,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;GApESpB,O;;KAAAA,O;AAwEP,eAAeD,YAAY,CAAC,CACzB,sGADyB,CAAD,CAAZ,CAEZsB,GAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport scriptLoader from \"react-async-script-loader\";\n\nfunction Weather({ isScriptLoaded, isScriptLoadSucceed }) {\n    const [address, setAddress] = React.useState(\"\");\n  \n    const handleChange = (value) => {\n      setAddress(value)\n    }\n  \n    const handleSelect = (value) => {\n      setAddress(value)\n    }\n  \n    if (isScriptLoaded && isScriptLoadSucceed) {\n      return (\n        <div>\n          <PlacesAutocomplete\n            value={address}\n            onChange={handleChange}\n            onSelect={handleSelect}\n          >\n            {({\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading,\n            }) => (\n              <div>\n                <input\n                  {...getInputProps({\n                    placeholder: \"Enter Address...\",\n                  })}\n                />\n                <div>\n                  {loading && <div>Loading...</div>}\n                  {suggestions.map((suggestion) => {\n                    const style = suggestion.active\n                      ? { backgroundColor: \"#a83232\", cursor: \"pointer\" }\n                      : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n  \n                    return (\n                      <div {...getSuggestionItemProps(suggestion, { style })}>\n                        {suggestion.description}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </PlacesAutocomplete>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n  \n// class Weather extends Component {\n//     state = {  }\n//     render() { \n//         return ( \n//             <div>\n//                 <form onSubmit={this.props.handleSubmit}>\n//                     <input type=\"search\" name=\"location\" placeholder=\"Search Location\"/>\n//                     <button className=\"find-location\">Find Weather</button>\n//                     </form>\n//             </div>\n\n//          );\n//     }\n// }\n \n\n\n  export default scriptLoader([\n    `https://maps.googleapis.com/maps/api/js?key=AIzaSyAdjCck2Sns4vUNqVAqimDhZITv34DKVVQ&libraries=places`,\n  ])(App);"]},"metadata":{},"sourceType":"module"}